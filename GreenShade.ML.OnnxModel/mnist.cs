// This file was automatically generated by VS extension Windows Machine Learning Code Generator v3
// from model file mnist.onnx
// Warning: This file may get overwritten if you add add an onnx file with the same name
using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Windows.Media;
using Windows.Storage;
using Windows.Storage.Streams;
using Windows.AI.MachineLearning;
namespace GreenShade.ML.OnnxModel
{
    
    public sealed class mnistInput
    {
        public ImageFeatureValue input_placeholer00; // BitmapPixelFormat: Gray8, BitmapAlphaMode: Premultiplied, width: 3, height: 256
    }
    
    public sealed class mnistOutput
    {
        public TensorFloat stage_30mid_conv70BiasAdd00; // shape(-1,32,32,22)
    }
    
    public sealed class mnistModel
    {
        private LearningModel model;
        private LearningModelSession session;
        private LearningModelBinding binding;
        public static async Task<mnistModel> CreateFromStreamAsync(IRandomAccessStreamReference stream)
        {
            mnistModel learningModel = new mnistModel();
            learningModel.model = await LearningModel.LoadFromStreamAsync(stream);
            learningModel.session = new LearningModelSession(learningModel.model);
            learningModel.binding = new LearningModelBinding(learningModel.session);
            return learningModel;
        }
        public async Task<mnistOutput> EvaluateAsync(mnistInput input)
        {
            binding.Bind("input_placeholer:0", input.input_placeholer00);
            var result = await session.EvaluateAsync(binding, "0");
            var output = new mnistOutput();
            output.stage_30mid_conv70BiasAdd00 = result.Outputs["stage_3/mid_conv7/BiasAdd:0"] as TensorFloat;
            return output;
        }
    }
}

